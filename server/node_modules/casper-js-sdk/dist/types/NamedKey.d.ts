import { Key } from './key';
import { CLValue } from './clvalue';
/**
 * Represents a named key, consisting of a name and an associated key.
 */
export declare class NamedKey {
    /**
     * The name of the named key.
     */
    name: string;
    /**
     * The key associated with the named key.
     */
    key: Key;
    /**
     * Creates a new instance of `NamedKey` with a name and key.
     *
     * @param name The name of the key.
     * @param key The associated key.
     */
    constructor(name: string, key: Key);
}
/**
 * Represents a value of a named key, where both the name and key value are `CLValue` types.
 */
export declare class NamedKeyValue {
    /**
     * The name of the named key represented as a `CLValue`.
     */
    name: CLValue;
    /**
     * The value of the named key represented as a `CLValue`.
     */
    namedKey: CLValue;
    /**
     * Creates a new `NamedKeyValue` instance with a name and named key value.
     *
     * @param name The name of the named key as a `CLValue`.
     * @param namedKey The value of the named key as a `CLValue`.
     */
    constructor(name: CLValue, namedKey: CLValue);
}
